
package packetCesar;


import java.util.Scanner;

public class cesar {

//la fonction qui calcule le nombre d'occurance d'une lettre dans un texte:

static int nb_Occurance (String s, char c){
	int i=0;
	int nb=0;
	for(i=0;i<s.length();i++){
			if(s.charAt(i)==c){
		nb++;
	    }
	}
     return nb;
}



	public static void main(String[] args) {
		// TODO Auto-generated method stub
		// System.out.println("Donnez le message que vous voullez decoder:\n");
		 //Scanner sc=new Scanner(System.in);
		// String s1=sc.next() ;

		 String s1="yrf nggndhrf n grkgr ra pynve pbaah rg yrf nggndhrf n grkgr ra pynve pubvfv fbag cyhfpbhenagrf dhr ibhf ar cbheevrm y’vzntvare vy neevir dh’ha pelcgnanylfgr qvfcbfr qhgrkgr ra pynve q’ha zrffntr bh dh’vy fbhqbvr dhrydh’ha cbhe puvssere ha zrffntr pubvfvcnesbvf ibhf a’nirm zrzr cnf orfbva qr fbhqblre dhrydh’ha fv ibhf qbaarm ha zrffntrn ha nzonffnqrhe vy l n qr sbegrf punaprf cbhe dhr pr zrffntr fbvg puvsser rgraiblr n fba cnlf q’bevtvar cbhe rinyhngvba ornhpbhc qr zrffntrf bag qrf ragrgrfrg qrf pbapyhfvbaf dhv crhirag rger pbaahrf bh qrivarrf cne yr pelcgnanylfgr yr pbqrfbhepr puvsser rfg cnegvphyvrerzrag ihyarenoyr n pnhfr qr y’nccnevgvba serdhragr qrf zbgfpyrsf qrsvar fgehpg r yfr erghea yr pbqr rkrphgnoyr puvsser fbhsser qr yn zrzrihyarenovyvgr qnaf pr pnf pr fbag yrf sbapgvbaf yrf fgehpgherf qr obhpyrf rgp dhv fbagra pnhfr" ;
		 System.out.println("le message chiffré est:");
		 System.out.println(s1);
			
			char alphabet[]={'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'};
	
	//CALCULER LE NOMBRE D4OCCURANCE DE CAHQUE LETTRE:
	    
	    int nba=nb_Occurance(s1,alphabet[0]);
	    int nbb=nb_Occurance(s1,alphabet[1]);
	    int nbc=nb_Occurance(s1,alphabet[2]);
	    int nbd=nb_Occurance(s1,alphabet[3]);
	    int nbe=nb_Occurance(s1,alphabet[4]);
	    int nbf=nb_Occurance(s1,alphabet[5]);
	    int nbg=nb_Occurance(s1,alphabet[6]);
	    int nbh=nb_Occurance(s1,alphabet[7]);
	    int nbi=nb_Occurance(s1,alphabet[8]);
	    int nbj=nb_Occurance(s1,alphabet[9]);
	    int nbk=nb_Occurance(s1,alphabet[10]);
	    int nbl=nb_Occurance(s1,alphabet[11]);
	    int nbm=nb_Occurance(s1,alphabet[12]);
	    int nbn=nb_Occurance(s1,alphabet[13]);
	    int nbo=nb_Occurance(s1,alphabet[14]);
	    int nbp=nb_Occurance(s1,alphabet[15]);
	    int nbq=nb_Occurance(s1,alphabet[16]);
	    int nbr=nb_Occurance(s1,alphabet[17]);
	    int nbs=nb_Occurance(s1,alphabet[18]);
	    int nbt=nb_Occurance(s1,alphabet[19]);
	    int nbu=nb_Occurance(s1,alphabet[20]);
	    int nbv=nb_Occurance(s1,alphabet[21]);
	    int nbw=nb_Occurance(s1,alphabet[22]);
	    int nbx=nb_Occurance(s1,alphabet[23]);
	    int nby=nb_Occurance(s1,alphabet[24]);
	    int nbz=nb_Occurance(s1,alphabet[25]);
	
	    //chercher la lettre qui se repette le plus:
	    
	     int  tab[]={nba,nbb,nbc,nbd,nbe,nbf,nbg,nbh,nbi,nbj,nbk,nbl,nbm,nbn,nbo,nbp,nbq,nbr,nbs,nbt,nbu,nbv,nbw,nbx,nby,nbz};
	     int max=0;
	     int nb=0;
	     int j;
	     for( j=0;j<26;j++)
	     {
	     	
	     	if(max<tab[j])
	     	{
	     		max=tab[j];
	     		nb=j;
			 }
	     	
		 }
	  
	   //calculer le decalage qui est egale à "la possition de lettre qui se repette le plus -le position du e":
	     
	    int decalage=nb-4;
	     System.out.println("le decalage est egale à:");
	     System.out.println(decalage);
	     
	     //decoder le message codé:
	     int k1,k2;
	     int pose;
	     for( k1=0;k1<s1.length();k1++)
	 	{
	 		for( k2=0;k2<26;k2++)
	 		{
	 				if (s1.charAt(k1)==alphabet[k2])
	 				{
	 			
	 			s1.replace(s1.charAt(k1), alphabet[((k2-decalage)%25)]);
	 			k2=26;
	 			
	 		        }
	 		}
	    	 
	    
	 	}

	     System.out.println("le message en clair est:");
	     System.out.println(s1);
	}

}